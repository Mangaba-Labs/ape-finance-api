// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/Mangaba-Labs/ape-finance-api/database"
	"github.com/Mangaba-Labs/ape-finance-api/pkg/api/router"
	handler3 "github.com/Mangaba-Labs/ape-finance-api/pkg/domain/auth/handler"
	handler4 "github.com/Mangaba-Labs/ape-finance-api/pkg/domain/stock/handler"
	repositoryStock "github.com/Mangaba-Labs/ape-finance-api/pkg/domain/stock/repository"
	servicesStock "github.com/Mangaba-Labs/ape-finance-api/pkg/domain/stock/services"
	"github.com/Mangaba-Labs/ape-finance-api/pkg/domain/user/handler"
	repositoryUser "github.com/Mangaba-Labs/ape-finance-api/pkg/domain/user/repository"
	"github.com/Mangaba-Labs/ape-finance-api/pkg/domain/user/services"
)

// Injectors from wire.go:

func initializeServer() (*router.Server, error) {
	db, err := database.NewDatabase()
	if err != nil {
		return nil, err
	}
	userRepository := repositoryUser.Repository{
		DB: db,
	}
	stockRepository := repositoryStock.Repository{
		DB: db,
	}

	userService := services.NewUserService(userRepository)
	handlerHandler := handler.NewUserHandler(userService)
	authHandler := handler3.NewAuthHandler(userService)
	stockService := servicesStock.NewUserService(stockRepository)
	stockHandler := handler4.NewStockHandler(stockService)
	server := router.NewServer(handlerHandler, authHandler, stockHandler)
	return server, nil
}
